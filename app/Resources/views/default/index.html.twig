{% extends 'base.html.twig' %}

{% block body %}
    <div id="map"></div>
    <div id="search-bar">
        <input type="button" onclick="submit();" value="Search">
        <div>
            <input id="search-text" type="text" name="search" value="bangkok">
        </div>
    </div>
    <!-- Replace the value of the key parameter with your own API key. -->
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD2tj9ow-vLsc3BjcrEe9GTSJ2x3IWKWj0&callback=initMap">
    </script>

{% endblock %}

{% block stylesheets %}
    <style>
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        #map {
            height: 100%;
        }

        #search-bar {
            position: fixed;
            z-index: 100;
            bottom: 5%;
            margin: auto;
            padding: 10px;
            width: 85%;
        }

        #search-bar input[type="text"] {
            width: 100%;
        }

        #search-bar input[type="button"] {
            float:right;
        }

        #search-bar div {
            overflow: hidden;
            padding-right: .5em;
        }
    </style>
{% endblock %}

{% block javascripts %}
    <script>
        var searchUrl = 'http://walls-rabbit.ar-bro.net/search?city=';
        var tweetCity;

        var map;
        var markers = [];
        var infoWindows = [];

        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 10,
                center: {lat: 13.7659, lng: 100.4678}
            });
            submit();
        }

        // Adds a marker to the map and push to the array.
        function addMarkerAndInfoWindow(location, icon, screenName, text, date) {
            var marker = new google.maps.Marker({
                position: location,
                icon: icon,
                map: map,
                title: screenName
            });

            var contentString = '<div id="content"><div id="siteNotice"></div>' +
                    '<h3 id="firstHeading" class="firstHeading">' + screenName + '</h3>' +
                    '<p>' + text + '</p>' +
                    '<p>' + date + '</p>' +
                    '</div>'
            var infoWindow = new google.maps.InfoWindow({
                content: contentString
            });

            marker.addListener('click', function() {
                infoWindow.open(map, marker);
            });

            markers.push(marker);
            infoWindows.push(infoWindow);
        }

        // Sets the map on all markers in the array.
        function setMapOnAll(map) {
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }

        // Deletes all markers in the array by removing references to them.
        function deleteMarkersAndInfoWindows() {
            setMapOnAll(null);
            markers = [];
            infoWindows = [];
        }

        // Get data using XMLHttpRequest
        function getJson(url, callback) {
            var xhr = new XMLHttpRequest();
            xhr.open("get", url, true);
            xhr.responseType = "json";
            xhr.onload = function () {
                var status = xhr.status;
                if (status == 200) {
                    callback(null, xhr.response);
                } else {
                    callback(status);
                }
            };
            xhr.send();
        }

        function submit() {
            // Get value from text field and get TweetCity
            var city = document.getElementById('search-text').value;
            getJson(searchUrl + city,
                    function (err, tweetCity) {
                        if (err != null) {
                            alert("Something went wrong: " + err);
                        } else {
                            console.log(tweetCity);

                            // delete all markers
                            deleteMarkersAndInfoWindows();
                            console.log('marker deleted');

                            // move maps to new location
                            map.panTo({lat: tweetCity.lat, lng: tweetCity.lng});

                            // add markers and info windows
                            for (var i = 0; i < tweetCity.tweets.length; i++) {
                                console.log(tweetCity.tweets[i]);
                                var tweet = tweetCity.tweets[i];

                                addMarkerAndInfoWindow(
                                        {lat: tweet.latitude, lng: tweet.longitude},
                                        tweet.image,
                                        tweet.screen_name,
                                        tweet.text,
                                        tweet.created_at
                                );
                            }
                        }
                    }
            );
        }
    </script>
{% endblock %}
